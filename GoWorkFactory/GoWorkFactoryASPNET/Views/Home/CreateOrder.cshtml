@model OrderViewModel
@{
    ViewData["Title"] = "CreateOrder";
}

<form asp-action="CreateOrderForm" asp-controller="Home" asp-anti-forgery="true">
    <div class="validation" asp-validation-summary="ModelOnly" />
    <div>
        <div class="form-group">
            <a class="btn btn-primary" asp-action="SelectProducts" asp-controller="Home" asp-route-orderId="@ViewBag.Order.Id">Выбрать продукты</a>
        </div>
        <div class="form-group">
            <input type="hidden" asp-for="Id" value="@ViewBag.Order.Id" />
            <span asp-validation-for="Id" />
        </div>
        <div class="form-group">
            <input type="hidden" asp-for="UserId" value="@ViewBag.Order.UserId" />
            <span asp-validation-for="UserId" />
        </div>
        <div class="form-group">
            <input type="hidden" asp-for="Status" value="@ViewBag.Order.Status" />
            <span asp-validation-for="Status" />
        </div>
        <div class="form-group">
            <label asp-for="DeliveryDate">Введите дату доставки</label>
            <input type="datetime" asp-for="DeliveryDate" value="@ViewBag.Order.DeliveryDate" />
            <span asp-validation-for="DeliveryDate" />
        </div>
        <div class="form-group">
            <label asp-for="DeliveryAddress">Введите адрес доставки</label>
            <input asp-for="DeliveryAddress" value="@ViewBag.Order.DeliveryAddress" />
            <span asp-validation-for="DeliveryAddress" />
        </div>

        <div class="form-group">
            <span>Сумма заказа: @((ViewBag.Order.Products as List<ProductViewModel>).Sum(x => x.Count * x.Price))</span>
        </div>

        <div class="form-group">
            <input type="submit" value="Сохранить" class="btn btn-outline-dark" />
        </div>
    </div>
</form>